
import com.sun.jdi.connect.spi.Connection;
import java.io.IOException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author roelb
 */
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;




public class Roomreserve extends javax.swing.JFrame {

  
     private final int SINGLE_ROOM_PRICE = 1000;
    private final int DOUBLE_ROOM_PRICE = 2500;
    private final int TWIN_ROOM_PRICE = 2800;
    private final int PREMIUM_PRICE = 6000;
    private final int WITH_BALCONY_PRICE = 6500;
    private final int VIEW_OF_RESORT_PRICE = 7000;
    private final int JUNIOR_PRICE = 8000;
    private final int EXECUTIVE_ROOM_PRICE = 8500;
    private final int PRESIDENTIAL_ROOM_PRICE = 9000;
    

    
    public Roomreserve() {
        initComponents();
        try {
            Connection();
        
        } catch(SQLException ex){
          connection = DriverManager.getConnection(Dburl, Dbusername, Dbnumber);
        }
        
        
    }
//Connection
    Connection con;
    //sql statement
    Statement st;
    //required for connection
    //database name
     String DbName = "reserve";
        String url = "jdbc:mysql://localhost:3306/"+ DbName; // replace with your database name
    String user = "root"; // replace with your database username
    String password = ""; // replace with your database password
    
    
    public void Connection() throws SQLException{
     con = (Connection) DriverManager.getConnection(url, user, password);
            
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choice = new javax.swing.JLabel();
        deluxeroom1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        roomreserve = new javax.swing.JLabel();
        guestchoice = new javax.swing.JLabel();
        choice1 = new javax.swing.JLabel();
        standardroom = new javax.swing.JLabel();
        standardroom1 = new javax.swing.JLabel();
        standardroom2 = new javax.swing.JLabel();
        standardroom3 = new javax.swing.JLabel();
        deluxeroom = new javax.swing.JLabel();
        deluxeroom2 = new javax.swing.JLabel();
        deluxeroom3 = new javax.swing.JLabel();
        deluxeroom4 = new javax.swing.JLabel();
        suiteroom = new javax.swing.JLabel();
        suiteroom1 = new javax.swing.JLabel();
        suiteroom2 = new javax.swing.JLabel();
        suiteroom3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        noOfPax = new javax.swing.JTextField();
        suiteroom4 = new javax.swing.JLabel();
        roomType = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        done = new javax.swing.JButton();
        reserve = new javax.swing.JButton();
        standardroom4 = new javax.swing.JLabel();
        singleprice = new javax.swing.JLabel();
        doubleprice = new javax.swing.JLabel();
        twinprice = new javax.swing.JLabel();
        premprice = new javax.swing.JLabel();
        wbalconyprice = new javax.swing.JLabel();
        viewprice = new javax.swing.JLabel();
        juniorprice = new javax.swing.JLabel();
        executiveprice = new javax.swing.JLabel();
        presidentialprice = new javax.swing.JLabel();

        choice.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        choice.setText("Choices:");

        deluxeroom1.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        deluxeroom1.setText("Deluxe Room");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        roomreserve.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        roomreserve.setText("Room Reservation");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(229, 229, 229)
                    .addComponent(roomreserve)
                    .addContainerGap(229, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(roomreserve)
                    .addContainerGap(38, Short.MAX_VALUE)))
        );

        guestchoice.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        guestchoice.setText("Guest's choice of Room Type:");

        choice1.setFont(new java.awt.Font("Serif", 3, 12)); // NOI18N
        choice1.setText("Choices:");

        standardroom.setBackground(new java.awt.Color(204, 255, 255));
        standardroom.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        standardroom.setText("Standard Room");

        standardroom1.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        standardroom1.setText("single room");

        standardroom2.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        standardroom2.setText("double Room");

        standardroom3.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        standardroom3.setText("Twin Room");

        deluxeroom.setBackground(new java.awt.Color(204, 255, 255));
        deluxeroom.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        deluxeroom.setText("Deluxe Room");

        deluxeroom2.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        deluxeroom2.setText("premium furnishing");

        deluxeroom3.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        deluxeroom3.setText("w/ balcony ");

        deluxeroom4.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        deluxeroom4.setText("view of resort");

        suiteroom.setBackground(new java.awt.Color(204, 255, 255));
        suiteroom.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        suiteroom.setText("Suite Room");

        suiteroom1.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        suiteroom1.setText("Executive Room");

        suiteroom2.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        suiteroom2.setText("Junior room");

        suiteroom3.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        suiteroom3.setText("Presidential Room");

        jLabel1.setText("no. of pax: ");

        noOfPax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOfPaxActionPerformed(evt);
            }
        });

        suiteroom4.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        suiteroom4.setText("room type:");

        roomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeActionPerformed(evt);
            }
        });

        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);

        done.setText("done");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        reserve.setText("reserve");
        reserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveActionPerformed(evt);
            }
        });

        standardroom4.setBackground(new java.awt.Color(204, 255, 255));
        standardroom4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        standardroom4.setText("Price");

        singleprice.setText("PHP 1,000");

        doubleprice.setText("PHP 2,500");

        twinprice.setText("PHP 2,800 ");

        premprice.setText("PHP 6,000");

        wbalconyprice.setText("PHP 6,500");

        viewprice.setText("PHP 7,000");

        juniorprice.setText("PHP 8,000");

        executiveprice.setText("PHP 8,500");

        presidentialprice.setText("PHP 9,000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deluxeroom)
                                    .addComponent(deluxeroom2)
                                    .addComponent(deluxeroom4)
                                    .addComponent(suiteroom, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deluxeroom3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(180, 180, 180)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(doubleprice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(twinprice)
                                            .addComponent(singleprice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(standardroom4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(52, 52, 52)))
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(suiteroom4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(noOfPax, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(done)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reserve))
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(standardroom, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guestchoice)
                    .addComponent(choice1)
                    .addComponent(standardroom1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardroom3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standardroom2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suiteroom1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(suiteroom3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suiteroom2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(juniorprice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(executiveprice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(presidentialprice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewprice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wbalconyprice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(premprice, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guestchoice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(choice1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(noOfPax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suiteroom4)
                            .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(standardroom)
                            .addComponent(standardroom4))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(singleprice)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(doubleprice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(twinprice))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(done)))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reserve))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(standardroom1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(standardroom3)
                                .addGap(6, 6, 6)
                                .addComponent(standardroom2)
                                .addGap(39, 39, 39)
                                .addComponent(deluxeroom, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deluxeroom2)
                                    .addComponent(premprice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deluxeroom3)
                                    .addComponent(wbalconyprice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deluxeroom4)
                                    .addComponent(viewprice))
                                .addGap(18, 18, 18)
                                .addComponent(suiteroom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(suiteroom2)
                                    .addComponent(juniorprice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suiteroom1)
                    .addComponent(executiveprice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suiteroom3)
                    .addComponent(presidentialprice))
                .addGap(195, 195, 195))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_doneActionPerformed

    private void noOfPaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOfPaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noOfPaxActionPerformed

    private void reserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveActionPerformed
        // TODO add your handling code here:
    /*    String DbName = "reserve";
        String url = "jdbc:mysql://localhost:3306/"+ DbName; // replace with your database name
    String user = "root"; // replace with your database username
    String password = ""; // replace with your database password
*/
    // Get the input data
    String paxString = noOfPax.getText();
    String roomTypeInput = roomType.getText();
    int numPax = Integer.parseInt(paxString);
    
    // Calculate total price based on room type
    int totalPrice = 0;
    switch (roomTypeInput.toLowerCase()) {
        case "single room":
            totalPrice = SINGLE_ROOM_PRICE * numPax;
            break;
        case "double room":
            totalPrice = DOUBLE_ROOM_PRICE * numPax;
            break;
        case "twin room":
            totalPrice = TWIN_ROOM_PRICE * numPax;
            break;
        case "premium room":
            totalPrice = PREMIUM_PRICE * numPax;
            break;
        case "balcony room":
            totalPrice = WITH_BALCONY_PRICE * numPax;
            break;
        case "executive room":
            totalPrice = EXECUTIVE_ROOM_PRICE * numPax;
            break;
        case "view room":
            totalPrice = VIEW_OF_RESORT_PRICE * numPax;
            break;
        case "junior room":
            totalPrice = JUNIOR_PRICE * numPax;
            break;
        case "presidential room":
            totalPrice = PRESIDENTIAL_ROOM_PRICE * numPax;
            break;
        default:
            TextArea.setText("Invalid room type entered.");
            return;
    }

    // Insert data into the database
    try (var conn = DriverManager.getConnection(url, user, password)) {
        String sql = "INSERT INTO reservations (num_pax, room_type, total_price) VALUES (?, ?, ?)";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, numPax);
        pstmt.setString(2, roomTypeInput);
        pstmt.setInt(3, totalPrice);
        pstmt.executeUpdate();
        
        TextArea.setText("Reservation successful!\nNumber of Pax: " + numPax + "\nRoom Type: " + roomTypeInput + "\nTotal Price: PHP " + totalPrice);
    } catch (SQLException e) {
        TextArea.setText("Database error: " + e.getMessage());
    }
    }//GEN-LAST:event_reserveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Roomreserve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Roomreserve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Roomreserve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Roomreserve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Roomreserve().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextArea;
    private javax.swing.JLabel choice;
    private javax.swing.JLabel choice1;
    private javax.swing.JLabel deluxeroom;
    private javax.swing.JLabel deluxeroom1;
    private javax.swing.JLabel deluxeroom2;
    private javax.swing.JLabel deluxeroom3;
    private javax.swing.JLabel deluxeroom4;
    private javax.swing.JButton done;
    private javax.swing.JLabel doubleprice;
    private javax.swing.JLabel executiveprice;
    private javax.swing.JLabel guestchoice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel juniorprice;
    private javax.swing.JTextField noOfPax;
    private javax.swing.JLabel premprice;
    private javax.swing.JLabel presidentialprice;
    private javax.swing.JButton reserve;
    private javax.swing.JTextField roomType;
    private javax.swing.JLabel roomreserve;
    private javax.swing.JLabel singleprice;
    private javax.swing.JLabel standardroom;
    private javax.swing.JLabel standardroom1;
    private javax.swing.JLabel standardroom2;
    private javax.swing.JLabel standardroom3;
    private javax.swing.JLabel standardroom4;
    private javax.swing.JLabel suiteroom;
    private javax.swing.JLabel suiteroom1;
    private javax.swing.JLabel suiteroom2;
    private javax.swing.JLabel suiteroom3;
    private javax.swing.JLabel suiteroom4;
    private javax.swing.JLabel twinprice;
    private javax.swing.JLabel viewprice;
    private javax.swing.JLabel wbalconyprice;
    // End of variables declaration//GEN-END:variables
}
